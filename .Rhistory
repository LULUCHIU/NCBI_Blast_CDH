tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
colnames(tmplist)<-c("Domain","Name","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Domain),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Name))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Name","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]),Domain=paste0("Domain ",dim(domainposi)[1]))
domainposi<-data.frame(cbind(tmpc,domainposi))
CDHfamily<-data.frame(rbind(CDHfamily,domainposi))
print(jj)
}
View(CDHfamily)
domaininfo
ori_seq
jj
domain_list<-unlist(str_split(domaininfo,"; D"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
colnames(tmplist)<-c("Domain","Name","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Domain),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Name))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Name","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmplist
dim(tmplist)
dim(tmplist)[2]
tmplist<-rbind(tmplist," ")
tmplist
colnames(tmplist)<-c("Domain","Name","info")
tmplist<-data.frame(rbind(tmplist,data.frame(X3="")))
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
tmplist
colnames(tmplist)<-c("Domain","Name","info")
CDHfamily<-data.frame()
for(jj in 1:length(ENTREZID$hgnc_symbol)){
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
domaininfo<-GetProteinAnnontate(id,"ft_domain")
ori_seq<-GetProteinAnnontate(id,"sequence")
domain_list<-unlist(str_split(domaininfo,"; D"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
if(dim(tmplist)[2]==2){
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
}
colnames(tmplist)<-c("Domain","Name","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Domain),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Name))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Name","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]),Domain=paste0("Domain ",dim(domainposi)[1]))
domainposi<-data.frame(cbind(tmpc,domainposi))
CDHfamily<-data.frame(rbind(CDHfamily,domainposi))
print(jj)
}
View(CDHfamily)
View(CDHfamily)
tmplist
id
symbol
domaininfo
names(domainposi)
is.na(domaininfo)
omaininfo=="NA"
domaininfo=="NA"
CDHfamily<-data.frame()
for(jj in 1:length(ENTREZID$hgnc_symbol)){
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
domaininfo<-GetProteinAnnontate(id,"ft_domain")
ori_seq<-GetProteinAnnontate(id,"sequence")
if(domaininfo=="NA"){
tmpc<-data.frame(symbol=symbol,Domain=c("NA"),start=c("NA"),end=c("NA"),
Name=c("NA"),Info=c("NA"),seq=c("NA"))
}else{
domain_list<-unlist(str_split(domaininfo,"; D"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
if(dim(tmplist)[2]==2){
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
}
colnames(tmplist)<-c("Domain","Name","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Domain),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Name))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Name","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]),Domain=paste0("Domain ",c(1:dim(domainposi)[1])))
}
domainposi<-data.frame(cbind(tmpc,domainposi))
CDHfamily<-data.frame(rbind(CDHfamily,domainposi))
print(jj)
}
tmpc
jj
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
id
symbol
domaininfo<-GetProteinAnnontate(id,"ft_domain")
ori_seq<-GetProteinAnnontate(id,"sequence")
domaininfo
View(CDHfamily)
domainposi<-data.frame(cbind(tmpc,domainposi))
View(CDHfamily)
CDHfamily<-data.frame()
for(jj in 1:length(ENTREZID$hgnc_symbol)){
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
domaininfo<-GetProteinAnnontate(id,"ft_domain")
ori_seq<-GetProteinAnnontate(id,"sequence")
if(domaininfo=="NA"){
domainposi<-data.frame(symbol=symbol,Domain=c("NA"),start=c("NA"),end=c("NA"),
Name=c("NA"),Info=c("NA"),seq=c("NA"))
}else{
domain_list<-unlist(str_split(domaininfo,"; D"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
if(dim(tmplist)[2]==2){
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
}
colnames(tmplist)<-c("Domain","Name","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Domain),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Name))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Name","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]),Domain=paste0("Domain ",c(1:dim(domainposi)[1])))
domainposi<-data.frame(cbind(tmpc,domainposi))
}
CDHfamily<-data.frame(rbind(CDHfamily,domainposi))
print(jj)
}
View(CDHfamily)
write.xlsx(CDHfamily,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/CDHfamily_domain_seq.xlsx")
names(ENTREZID)
names(CDHfamily)
All<-merge(ENTREZID,CDHfamily,by.x="hgnc_symbol",by.y="symbol",all.y=T)
View(All)
write.xlsx(All,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/CDHfamily_domain_seq.xlsx")
View(All)
All_clean<-All[-which(All$Domain=="NA"),]
View(All_clean)
names(All_clean)
All_clean$ID<-paste0(All_clean$hgnc_symbol,"_",All_clean$Domain)
All_clean$fasta<-paste0(">",All_clean$ID,"\n",All_clean$seq)
querydb<-All_clean$fasta[which(All_clean$hgnc_symbol!="CDH17")]
querydb
targetdb<-All_clean$fasta[which(All_clean$hgnc_symbol=="CDH17")]
write.table(data.frame(x=querydb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/query.fasta",quote = F,col.names = F,row.names = F)
write.table(data.frame(x=targetdb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/target.fasta",quote = F,col.names = F,row.names = F)
All_clean$Domain<-gsub(" ","",All_clean$Domain)
All_clean$ID<-paste0(All_clean$hgnc_symbol,"_",All_clean$Domain)
All_clean$fasta<-paste0(">",All_clean$ID,"\n",All_clean$seq)
querydb<-All_clean$fasta[which(All_clean$hgnc_symbol!="CDH17")]
targetdb<-All_clean$fasta[which(All_clean$hgnc_symbol=="CDH17")]
write.table(data.frame(x=querydb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/query.fasta",quote = F,col.names = F,row.names = F)
write.table(data.frame(x=targetdb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/target.fasta",quote = F,col.names = F,row.names = F)
querydb<-All_clean$fasta
write.table(data.frame(x=querydb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/query.fasta",quote = F,col.names = F,row.names = F)
All$seq[which(All$hgnc_symbol=="CDH17" & All$Domain=="Domain 4")]
nchar(All$seq[which(All$hgnc_symbol=="CDH17" & All$Domain=="Domain 4")])
outdir<-"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/cluster_id0.1_cov_0.1"
output<-read.table(paste0(outdir,"/result_cluster.txt"),sep="\t",header=F)
#output<-read.table(paste0(wdir,"/output_linux/result_cluster.txt"),sep="\t",header=F)
colnames(output)<-c("Represent","Member")
parent<-as.character(unique(output$Represent))
datadb<-data.frame(cbind(parent,paste0("C",c(1:length(parent)))))
colnames(datadb)[2]<-"H_cluster"
output<-merge(output,datadb,by.x="Represent",by.y="parent")
output$Represent<-gsub("_","-",output$Represent)
output$Member<-gsub("_","-",output$Member)
output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
#write.table(output,paste0(outdir,"/Cluster_HC_Result.txt"),sep="\t",quote=F,row.names=F)
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
library(openxlsx)
library(dplyr)
library(tibble)
library(stringr)
library(MASS)
library(gdata)
output<-read.table(paste0(outdir,"/result_cluster.txt"),sep="\t",header=F)
#output<-read.table(paste0(wdir,"/output_linux/result_cluster.txt"),sep="\t",header=F)
colnames(output)<-c("Represent","Member")
parent<-as.character(unique(output$Represent))
datadb<-data.frame(cbind(parent,paste0("C",c(1:length(parent)))))
colnames(datadb)[2]<-"H_cluster"
output<-merge(output,datadb,by.x="Represent",by.y="parent")
output$Represent<-gsub("_","-",output$Represent)
output$Member<-gsub("_","-",output$Member)
output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
#write.table(output,paste0(outdir,"/Cluster_HC_Result.txt"),sep="\t",quote=F,row.names=F)
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
View(output)
#output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
names(output)
output<-output[,c("Member","H_cluster")]
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
outdir<-"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/cluster_id0.2_cov_0"
output<-read.table(paste0(outdir,"/result_cluster.txt"),sep="\t",header=F)
#output<-read.table(paste0(wdir,"/output_linux/result_cluster.txt"),sep="\t",header=F)
colnames(output)<-c("Represent","Member")
parent<-as.character(unique(output$Represent))
datadb<-data.frame(cbind(parent,paste0("C",c(1:length(parent)))))
colnames(datadb)[2]<-"H_cluster"
output<-merge(output,datadb,by.x="Represent",by.y="parent")
output$Represent<-gsub("_","-",output$Represent)
output$Member<-gsub("_","-",output$Member)
#output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
output<-output[,c("Member","H_cluster")]
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
outdir<-"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/cluster_id0.2_cov_0.1"
output<-read.table(paste0(outdir,"/result_cluster.txt"),sep="\t",header=F)
#output<-read.table(paste0(wdir,"/output_linux/result_cluster.txt"),sep="\t",header=F)
colnames(output)<-c("Represent","Member")
parent<-as.character(unique(output$Represent))
datadb<-data.frame(cbind(parent,paste0("C",c(1:length(parent)))))
colnames(datadb)[2]<-"H_cluster"
output<-merge(output,datadb,by.x="Represent",by.y="parent")
output$Represent<-gsub("_","-",output$Represent)
output$Member<-gsub("_","-",output$Member)
#output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
output<-output[,c("Member","H_cluster")]
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
outdir<-"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/cluster_id0.3_cov_0"
output<-read.table(paste0(outdir,"/result_cluster.txt"),sep="\t",header=F)
#output<-read.table(paste0(wdir,"/output_linux/result_cluster.txt"),sep="\t",header=F)
colnames(output)<-c("Represent","Member")
parent<-as.character(unique(output$Represent))
datadb<-data.frame(cbind(parent,paste0("C",c(1:length(parent)))))
colnames(datadb)[2]<-"H_cluster"
output<-merge(output,datadb,by.x="Represent",by.y="parent")
output$Represent<-gsub("_","-",output$Represent)
output$Member<-gsub("_","-",output$Member)
#output<-merge(data_ori,data.frame(output[,c("Member","H_cluster")]),by.x="ID",by.y="Member")
output$H_cluster<-reorder.factor(output$H_cluster,new.order=datadb$H_cluster)
output<-output %>% arrange(H_cluster)
output<-output[,c("Member","H_cluster")]
write.xlsx(output,paste0(outdir,"/Cluster_Result.xlsx"))
View(All)
View(All_clean)
All_clean$seq[which(All_clean$ID=="CDH18_Domain4")]
All_clean$seq[which(All_clean$ID=="CDH17_Domain4")]
All_clean$seq[which(All_clean$ID=="CDH10_Domain4")]
All_clean$seq[which(All_clean$ID=="CDH17_Domain6")]
All_clean$seq[which(All_clean$ID=="CDH8_Domain3")]
cluster<-read.xlsx("/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/cluster_id0.3_cov_0/Cluster_Result.xlsx",sheet=2)
score<-read.xlsx("/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2/resultDB_pref_version_s6.xlsx")
View(cluster)
View(score)
cluster$query_domian<-gsub("-","_",cluster$query_domian)
cluster$target_domain<-gsub("-","_",cluster$target_domain)
cluster$ID<-paste0(cluster$query_domian,"_vs_",cluster$target_domain)
score$ID<-paste0(score$query_domain,"_vs_",score$target_domain)
intersect(cluster$ID,score$ID)
both<-intersect(cluster$ID,score$ID)
setdiff(cluster$ID,both)
All_clean$seq[which(All_clean$ID=="CDH2_Domain5")]
All_clean$seq[which(All_clean$ID=="CDH17_Domain7")]
names(cluster)
names(score)
cluster_score<-merge(score,cluster,by=c("query_domian","target_domain","ID"),all=T)
colnames(cluster)[1]<-"query_domain"
cluster_score<-merge(score,cluster,by=c("query_domian","target_domain","ID"),all=T)
cluster_score<-merge(score,cluster,by=c("query_domain","target_domain","ID"),all=T)
View(cluster_score)
write.xlsx(cluster_score,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/result_cluster_score.xlsx")
id
GetProteinAnnontate(id,"ft_site")
GetProteinAnnontate(id,"ft_transmem")
GetProteinAnnontate("Q12864","ft_transmem")
GetProteinAnnontate("Q12864","cc_subcellular_location")
GetProteinAnnontate("Q12864","ft_region")
GetProteinAnnontate("Q12864","cc_domain")
GetProteinAnnontate("Q12864","xref_smart")
GetProteinAnnontate("SM00112","sequence")
GetProteinAnnontate("Q12864","xref_interpro")
GetProteinAnnontate("Q12864","xref_proteomicsdb")
GetProteinAnnontate("Q12864","xref_ccds")
GetProteinAnnontate("Q12864","protein_families")
GetProteinAnnontate("Q12864","ft_site")
GetProteinAnnontate("Q12864","fragment")
GetProteinAnnontate("Q12864","organelle")
GetSubcellular_location("Q12864")
GetProteinAnnontate("Q12864","ft_topo_dom")
id<-"Q12864"
symbol<-"CDH17"
domaininfo<-GetProteinAnnontate(id,"ft_topo_dom")
ori_seq<-GetProteinAnnontate(id,"sequence")
domaininfo
ori_seq
domain_list<-unlist(str_split(domaininfo,"; TO"))
domain_list
tmplist<-str_split(domain_list,";")
tmplist
tmplist<-data.frame(do.call("rbind", tmplist))
tmplist
colnames(tmplist)<-c("Position","Location","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+ ","",tmplist$Position),"\\..")))
domainposi
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+_[A-Z]+ ","",tmplist$Position),"\\..")))
domainposi
domainposi<-cbind(domainposi,tmplist$info)
domainposi
domainposi<-domainposi[,-3]
domainposi
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Location))
domainposi
domainposi<-cbind(domainposi,tmplist$info)
domainposi
colnames(domainposi)<-c("start","end","Location","Info")
domainposi
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
domainposi
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]))
domainposi<-data.frame(cbind(tmpc,domainposi))
domainposi
names(domainposi)
CDHfamily_full<-data.frame()
for(jj in 1:length(ENTREZID$hgnc_symbol)){
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
domaininfo<-GetProteinAnnontate(id,"ft_topo_dom")
ori_seq<-GetProteinAnnontate(id,"sequence")
if(domaininfo=="NA"){
domainposi<-data.frame(symbol=symbol,start=c("NA"),end=c("NA"),
Location=c("NA"),Info=c("NA"),seq=c("NA"))
}else{
domain_list<-unlist(str_split(domaininfo,"; TO"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
if(dim(tmplist)[2]==2){
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
}
colnames(tmplist)<-c("Position","Location","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+_[A-Z]+ ","",tmplist$Position),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Location))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Location","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]))
domainposi<-data.frame(cbind(tmpc,domainposi))
}
CDHfamily_full<-data.frame(rbind(CDHfamily,domainposi))
print(jj)
}
jj
domainposi
CDHfamily_full<-data.frame()
for(jj in 1:length(ENTREZID$hgnc_symbol)){
id<-ENTREZID$uniprotswissprot[jj]
symbol<-ENTREZID$hgnc_symbol[jj]
domaininfo<-GetProteinAnnontate(id,"ft_topo_dom")
ori_seq<-GetProteinAnnontate(id,"sequence")
if(domaininfo=="NA"){
domainposi<-data.frame(symbol=symbol,start=c("NA"),end=c("NA"),
Location=c("NA"),Info=c("NA"),seq=c("NA"))
}else{
domain_list<-unlist(str_split(domaininfo,"; TO"))
tmplist<-str_split(domain_list,";")
tmplist<-data.frame(do.call("rbind", tmplist))
if(dim(tmplist)[2]==2){
tmplist<-data.frame(cbind(tmplist,data.frame(X3="")))
}
colnames(tmplist)<-c("Position","Location","info")
domainposi<-data.frame(do.call("rbind",str_split(gsub("[A-Z]+_[A-Z]+ ","",tmplist$Position),"\\..")))
domainposi<-cbind(domainposi,gsub(" \\/note=","",tmplist$Location))
domainposi<-cbind(domainposi,tmplist$info)
colnames(domainposi)<-c("start","end","Location","Info")
domainposi$seq<-NA
for(ii in 1:(dim(domainposi)[1])){
domainposi$seq[ii]<-substr(ori_seq, start = as.numeric(domainposi$start[ii]),
stop = as.numeric(domainposi$end[ii]))
}
tmpc<-data.frame(symbol=rep(symbol,dim(domainposi)[1]))
domainposi<-data.frame(cbind(tmpc,domainposi))
}
CDHfamily_full<-data.frame(rbind(CDHfamily_full,domainposi))
print(jj)
}
View(CDHfamily_full)
All_full<-merge(ENTREZID,CDHfamily_full,by.x="hgnc_symbol",by.y="symbol",all.y=T)
View(All_full)
View(All_full)
All_clean<-All_full[-which(All_full$Location=="NA"),]
View(All_full)
View(All_clean)
write.xlsx(All_full,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/CDHfamily_full_seq.xlsx")
All_clean$ID<-paste0(All_clean$hgnc_symbol,"_",All_clean$start,"_",All_clean$end)
All_clean$fasta<-paste0(">",All_clean$ID,"\n",All_clean$seq)
write.xlsx(All_clean,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/CDHfamily_full_seq_fasta.xlsx")
unique(All_clean$Location)
#querydb<-All_clean$fasta[which(All_clean$hgnc_symbol!="CDH17")]
querydb<-All_clean$fasta[which(All_clean$Location=="Extracellular")]
targetdb<-All_clean$fasta[which(All_clean$hgnc_symbol=="CDH17" & All_clean$Location=="Extracellular")]
write.table(data.frame(x=querydb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2_full/query.fasta",quote = F,col.names = F,row.names = F)
write.table(data.frame(x=targetdb),"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2_full/target.fasta",quote = F,col.names = F,row.names = F)
aln_full<-read.xlsx("/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2_full/resultDB_aln_full.xlsx")
View(aln_full)
View(All_clean)
names(All_clean)
all_tmp<-All_clean[,c("hgnc_symbol","uniprotswissprot","Location","ID","seq")]
View(all_tmp)
unique(all_tmp$Location)
all_tmp<-all_tmp[which(all_tmp$Location=="Extracellular"),]
colnames(aln_full)[1]<-"ID"
all_aln_full<-merge(aln_full,all_tmp,by="ID",all=T)
View(all_aln_full)
write.xlsx(all_aln_full,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/resultDB_aln_full_seq.xlsx")
aln_full<-read.xlsx("/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/mmseqs2_full/BLAST/resultDB_s11.xlsx")
View(all_tmp)
all_aln_full<-merge(aln_full,all_tmp,by="ID",all=T)
colnames(aln_full)[1]<-"ID"
all_aln_full<-merge(aln_full,all_tmp,by="ID",all=T)
write.xlsx(all_aln_full,"/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/result/resultDB_aln_full_seq.xlsx")
View(All)
All$seq[which(All$hgnc_symbol=="CDHR2" & All$Domain=="Domain 7")]
All$seq[which(All$hgnc_symbol=="CDH17" & All$Domain=="Domain 3")]
All$seq[which(All$hgnc_symbol=="DCHS1" & All$Domain=="Domain 6")]
All$seq[which(All$hgnc_symbol=="CDH17" & All$Domain=="Domain 5")]
nchar(All$seq[which(All$hgnc_symbol=="CDHR2" & All$Domain=="Domain 7")])
nchar(All$seq[which(All$hgnc_symbol=="CDH17" & All$Domain=="Domain 3")])
ncbiblast<-read.xlsx("/Users/qiuluting/Desktop/CTMbio/Project/2_Pipline/D2/CDH17_and_Family_domain/RPAVD5UH01N-Alignment.xlsx")
View(ncbiblast)
View(alist)
outid<-getBM(attributes=c('hgnc_symbol','entrezgene_id','uniprotswissprot','entrezgene_accession'),
filters = 'entrezgene_accession',
values = ncbiblast$subj,
mart = ensembl)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','entrezgene_accession'),
filters = 'entrezgene_accession',
values = ncbiblast$subj,
mart = ensembl)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','hpa_accession'),
filters = 'hpa_accession',
values = ncbiblast$subj,
mart = ensembl)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','mim_gene_accession'),
filters = 'mim_gene_accession',
values = ncbiblast$subj,
mart = ensembl)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','protein_id'),
filters = 'protein_id',
values = ncbiblast$subj,
mart = ensembl)
View(outid)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','refseq_peptide'),
filters = 'refseq_peptide',
values = ncbiblast$subj,
mart = ensembl)
View(outid)
library(org.Hs.eg.db)
mapped <- select(org.Hs.eg.db, as.character(ncbiblast$subj), c("ENTREZID","SYMBOL","GENENAME"), "ACCNUM")
mapped <- select(org.Hs.eg.db, as.character(ncbiblast$subj), c("ENTREZID","SYMBOL","GENENAME"), "accnum")
mapped <- select(org.Hs.eg.db, as.character(ncbiblast$subj), c("ENTREZID","SYMBOL","GENENAME"), keytypes="accnum")
mapped <- select(org.Hs.egACCNUM, as.character(ncbiblast$subj), c("ENTREZID","SYMBOL","GENENAME"), keytypes="accnum")
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','refseq_peptide'),
values = "*",
mart = ensembl)
View(outid)
rm(list="outid")
outid<-getBM(attributes=c('entrezgene_id','entrezgene_description','entrezgene_accession'),
values = "*",
mart = ensembl)
View(output)
View(outid)
outid<-getBM(attributes=c('hgnc_symbol','uniprotswissprot','peptide_location'),
filters = 'peptide_location',
values = ncbiblast$subj,
mart = ensembl)
